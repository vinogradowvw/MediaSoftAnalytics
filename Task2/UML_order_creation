@startuml
!theme plain
participant User as u
participant Frontend_Aplication as fe
participant SQLite as lite
participant Backend as be
participant DataBase as db
participant Bakery as bk
participant Payment_service as ps


activate u

u -> fe : Пользоваетль заходит в меню

activate fe

fe -> be : GET /bakery/{bakeryId}/menu/

activate be

be -> bk : GET /menu

activate bk
bk --> be : productIds товаров, которые доступны к продаже

be -> db : SELECT * FROM products WHERE id IN (productIds)

activate db

db --> be : Информация о доступных товарах

be --> fe : Информация о доступных товарах

fe --> u : Меню

loop Пока пользователь не готов


alt Добавление товара в корзину
u -> fe : Добавление товара в корзину

fe -> lite : INSERT INTO cart (product_id) VALUES (id)

activate lite

else Удаление товара из корзины

u -> fe : Удалить товар из корзины

fe -> lite : DELETE FROM cart WHERE product_id = id
end

alt Проверяет корзину

fe -> lite : SELECT product_id FROM cart

lite --> fe : id продуктов в корзине

fe -> be : GET /products?ids=id1,id2,id3...

be -> db : SELECT * FROM products WHERE id IN (productIds)

db --> be : Информация о продуктах в корзине

be --> fe : Информация о продуктах в корзине

fe --> u : Информация о продуктах в корзине

end

end

fe -> lite : SELECT productId FROM cart

lite --> fe : id продуктов в корзине

fe -> be : GET /products?ids=id1,id2,id3...

be -> db : SELECT * FROM products WHERE id IN (productIds)

db --> be : Информация о продуктах в корзине



be --> fe : Информация о продуктах в корзине

fe --> u : Информация о продуктах в корзине

u -> fe : Оплата заказа

fe -> be : POST /payment/user/{userId}/initiate [данные о оплате в теле]

be -> ps : Запрос на оплату

activate ps

ps --> be : Перенаправление на оплату

be --> fe : Перенаправление на оплату

fe --> u : Перенаправление на оплату

loop Попыток оплаты < 3

u -> fe : Ввод данных для оплаты (на стороне платежного шлюза)

fe -> ps : Совершение операции (на стороне платежного шлюза)


alt Оплата успешна

ps --> be : Подтверждение оплаты

be -> bk : POST /sendOrder/products?ids=id1,id2,id3...

bk --> be : Подтверждение, примерное время ожидания

be -> db : Вставка в бд нового заказа
note right

INSERT INTO orders (user_id, status)
VALUES (user_id, 'active');

INSERT INTO order_items (order_id, product_id, quantity)
VALUES 
    (new_order_id, product_id_1, quantity_1),
    (new_order_id, product_id_2, quantity_2);
end note

deactivate db

deactivate bk

be --> fe : Подтверждение, примерное время ожидания

deactivate be

fe -> u : Подтверждение, примерное время ожидания

fe -> lite : DELETE FROM cart


deactivate lite



else Оплата не прошла

ps -> fe : Повторить попытку

deactivate ps

fe -> u: Повторить попытку

end

deactivate u
deactivate fe

end


@end
@enduml
