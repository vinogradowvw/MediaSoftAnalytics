@startuml
!theme plain
participant User as u
participant Frontend_Aplication as fe
participant Backend as be
participant DataBase as db
participant Bakery as bk
participant Payment_service as ps

activate u

u -> fe : Запрос на изменение заказа

activate fe
fe -> be : GET /order/active/user/(userId)

activate be
be -> db : Запрос данных о текущем заказе

note right
SELECT oi.*
FROM order_items oi
LEFT JOIN orders o ON oi.order_id = o.id
HAVING o.user_id = userId AND o.status = 'active'
end note

activate db
db --> be : Информация о товарах в текущем заказе

be --> fe : Информация о товарах в текущем заказе

fe --> u : Информация о товарах в текущем заказе

loop Пока пользователь не готов

alt Добавление новых товаров в заказ

u -> fe : Запрос на доступные товары

fe -> be : GET /bakery/{bakeryId}/menu/

be -> bk : GET /menu

activate bk

bk --> be : productId доступных товаров

be -> db : SELECT * FROM products WHERE id in (productId)

db --> be : Информация о доступных товарах

be --> fe : Информация о доступных товарах

fe --> u : Информация о доступных товарах

u -> fe : Добавление товаров, подтверждение действия

fe -> be : PATCH /order/{orderId}/products?id1,id2,id3...

be -> db : Вставка новых товаров в заказ в бд

note right 
INSERT INTO order_items (order_id, product_id, quantity)
VALUES 
    (orderId, product_id_1, quantity_1),
    (orderId, product_id_2, quantity_2);
end note

end

alt Удаление товаров из заказа

u -> fe : Выбор товаров для удаления

fe -> be : DELETE /order/{orderId}/products?id1,id2,id3...

be -> db : Удаление товаров в заказе из бд

note right
DELETE FROM order_items 
WHERE order_id = orderId 
AND product_id IN (id1, id2, id3);
end note

end

alt Отмена заказа

u -> fe : Запрос на удаление заказа

fe -> be : DELETE /order/{orderId}

be -> db : Удаление заказа и товаров в заказе из бд

note right
DELETE FROM order_items WHERE order_id = orderId;
DELETE FROM orders WHERE id = orderId;
end note

end

be -> db : Перерасчет стоимости заказа

note right
SELECT SUM(oi.quantity * p.price)
FROM order_items oi
JOIN products p ON oi.product_id = p.id
WHERE oi.order_id = orderId
end note

db --> be : Сумма актуального заказа

be -> db: Получение данных об оплаченной части заказа

note right
SELECT SUM(amount) FROM payments
WHERE order_id = orderId
end note

db --> be : Сумма оплаченной части заказа

be -> be : Перерасчет суммы заказа

be -> fe : Новая сумма заказа

fe -> u : Новая сумма заказа

end

u -> fe : Закончить и оплатить

fe -> be : POST /payment/user/{userId}/initiate [данные о оплате в теле]

be -> ps : Запрос на оплату / возврат

activate ps

ps --> be : Перенаправление на заполнение формы для оплаты / возврата

be --> fe : Перенаправление на заполнение формы для оплаты / возврата

fe --> u : Перенаправление на заполнение формы для оплаты / возврата

loop Попыток оплаты < 3

u -> fe : Ввод данных для оплаты (на стороне платежного шлюза)

fe -> ps : Перевод данных для оплаты (на стороне платежного шлюза)

alt Оплата успешна

ps --> be : Подтверждение оплаты

be -> bk : [ POST / DELETE ] /sendOrder/products?ids=id1,id2,id3...

bk --> be : Подтверждение, примерное время ожидания

deactivate bk

else Оплата не прошла

ps -> fe : Повторить попытку

deactivate ps

fe -> u : Повторить попытку

deactivate fe
deactivate u


end

end

@enduml
